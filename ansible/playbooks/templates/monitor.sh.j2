#!/bin/bash
# Script de monitoramento do servidor de jogo

# Configurações
GAME_TYPE="{{ game_type }}"
LOG_FILE="/home/gameserver/logs/monitor.log"
SERVICE_NAME="{{ game_type }}-server"

# Função de log
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$LOG_FILE"
}

# Verificar se o serviço está rodando
check_service() {
    if systemctl is-active --quiet "$SERVICE_NAME"; then
        log "INFO: Serviço $SERVICE_NAME está ativo"
        return 0
    else
        log "ERROR: Serviço $SERVICE_NAME está inativo"
        return 1
    fi
}

# Verificar uso de CPU e memória
check_resources() {
    CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)
    MEM_USAGE=$(free | grep Mem | awk '{printf "%.1f", $3/$2 * 100.0}')
    DISK_USAGE=$(df -h / | awk 'NR==2{printf "%s", $5}' | cut -d'%' -f1)
    
    log "INFO: CPU: ${CPU_USAGE}%, RAM: ${MEM_USAGE}%, Disk: ${DISK_USAGE}%"
    
    # Alertas
    if (( $(echo "$CPU_USAGE > 90" | bc -l) )); then
        log "WARNING: Uso de CPU alto: ${CPU_USAGE}%"
    fi
    
    if (( $(echo "$MEM_USAGE > 90" | bc -l) )); then
        log "WARNING: Uso de RAM alto: ${MEM_USAGE}%"
    fi
    
    if [ "$DISK_USAGE" -gt 90 ]; then
        log "WARNING: Uso de disco alto: ${DISK_USAGE}%"
    fi
}

# Verificar conectividade de rede
check_network() {
    if ping -c 1 8.8.8.8 > /dev/null 2>&1; then
        log "INFO: Conectividade de rede OK"
    else
        log "ERROR: Problemas de conectividade de rede"
    fi
}

# Verificar portas do jogo
check_ports() {
    case "$GAME_TYPE" in
        "sotf")
            PORTS="8766"
            ;;
        "minecraft")
            PORTS="25565"
            ;;
        "valheim")
            PORTS="2456 2457"
            ;;
        "rust")
            PORTS="28015 28016"
            ;;
        "ark")
            PORTS="7777 7778 27015"
            ;;
        *)
            log "WARNING: Tipo de jogo desconhecido: $GAME_TYPE"
            return
            ;;
    esac
    
    for port in $PORTS; do
        if netstat -tuln | grep -q ":$port "; then
            log "INFO: Porta $port está aberta"
        else
            log "WARNING: Porta $port não está aberta"
        fi
    done
}

# Executar verificações
log "=== Iniciando monitoramento do servidor $GAME_TYPE ==="
check_service
check_resources
check_network
check_ports
log "=== Fim do monitoramento ==="
